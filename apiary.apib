§FORMAT: 1A
HOST: http://polls.api/versionblueprint.org/

# monocle

API для получения радиолокационных данных. Все комментарии на русском, в соответствии со спецификацией. В именах сущностей часть названий, для которых удалось подобрать соотвествующий англоязычный аналог, передена на английский, часть оставлена в виде аббревиатур, соответсвующих русскоязычным аббревиатурам.

# Group СМРЛП

## АС СМРЛП [/station/list]

Запрос состава АС СМРЛП и параметров отдельных постов

### Получить список СМРЛП [GET]

+ Response 200 (application/json; charset=UTF-8)
    + Attributes(object)
        - count: `1` (number) - Количество станций в списке
        - items (array[Station]) - Список станций


## СМРЛП [/station/{id}]

Параметры отдельного СМРЛП

+ Parameters
    + id: `0` (number, optional) - ID СМРЛП

### Получить параметры СМРЛП [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes(Station)

+ Response 404

### Обновить параметры СМРЛП [PUT]

+ Request (application/json)
    + Attribute(StationBase)

+ Response 422 (application/json)

    + Body

            {
                "index": "Индекс не уникален",
                "title": "Невалидное значение",
                "baltrad_index": "Невалидное значение",
                "path": "Невалидное значение",
                "synopt_index": "Невалидное значение"
                "terrain_type": "Невалидное значение",
                "latitude": "Невалидное значение",
                "longitude": "Невалидное значение",
                "terrain_altitude": "Невалидное значение",
                "radar_elevation": "Невалидное значение",
                "pressure_sensor_elevation": "Невалидное значение",
                "mtp_elevation": "Невалидное значение",
                "radar_present": "Невалидное значение",
                "nams_present": "Невалидное значение",
                "mtp_present": "Невалидное значение",
            }

+ Response 200 (application/json; charset=utf-8)
    + Attribute(Station)

+ Response 404

## Расписание СМРЛП [/station/{id}/schedule]

Работа с расписанием работы отдельного СМРЛП

+ Parameters
    + id: `0` (number, required) - ID СМРЛП

### Получить расписание СМРЛП [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes (object)
        - count: 1 (number) - Количество записей в расписании
        - items(Schedule) - Расписание
+ Response 409

### Обновить расписание СМРЛП [PUT]

+ Request (application/json)
    + Attributes (object)
        - count: 1 (number) - Количество записей в расписании
        - items(Schedule) - Расписание

+ Response 200 (application/json)

+ Response 422

        {
            "count": 2,
            "items":
            [
                {
                    "id": 0,
                    "program_id": "Указанная программа не найдена.",
                    "date": "17:30:46"
                },
                {
                    "id": 1,
                    "program_id": 2,
                    "date": "Чоо-то не так с этим временем"
                }
            ]
        }

+ Response 409

+ Response 404

## Включить работу СМРЛП по расписанию [/station/{id}/schedule/start]

Запуск работы СМРЛП по предварительно заданному расписанию

+ Parameters
    + id: `0` (number, required) - ID СМРЛП

### Включить [POST]

+ Response 200 (application/json)

+ Response 409

+ Response 404

## Остановить работу СМРЛП по расписанию [/station/{id}/schedule/stop]

Отмена работы СМРЛП по заданному расписанию и перевод РЛС в режим "ГОТОВНОСТЬ"

+ Parameters
    + id: `0` (number, required) - ID СМРЛП

### Остановить [POST]

+ Response 200 (application/json)

+ Response 409

+ Response 404


## Запустить запись карты местных отражений [/station/{id}/local_reflection_map/start{?cycle}]

Запуск построения карты местных отражений. Ожидание ответа от СМРЛП не происходит,
всегда возвращается 200 OK

+ Parameters
    + id: `0` (number, required) - ID СМРЛП
    + cycle (number, optional) - количество циклов, в текущей итерации всегда 1
        + Default: `1`


### Запись карты местных отражений [POST]

+ Response 200 (application/json)

## Остановить запись карты местных отражений [/station/{id}/local_reflection_map/stop]

Отмена запущенного процесса записи карты местных отражений. Ожидание ответа от СМРЛП не происходит,
всегда возвращается 200 OK

+ Parameters
    + id: `0` (number, required) - ID станции

### Остановить запись карты местных отражений [POST]

+ Response 200 (application/json)

## Запустить работу СМРЛП по программе [/station/{id}/program/{program_id}/start]

Запуск работы СМРЛП по указанной программе

+ Parameters
    + id: `0` (number, required) - ID СМРЛП
    + program_id: `1` (number, required) - ID программы

### Запустить [POST]

+ Response 200 (application/json)

+ Response 409

+ Response 404

## Остановить работу СМРЛП по программе [/station/{id}/program/stop]

Отмена работы СМРЛП по текущей программе и перевод РЛС в режим "ГОТОВНОСТЬ"
Примечание: для отмены работы по расписанию используется другой метод

+ Parameters
    + id: `0` (number, required) - ID СМРЛП

### Остановить [POST]

+ Response 200 (application/json)

+ Response 409

+ Response 404

## Запуск программы "КОНТРОЛЬ" для РЛС СМРЛП [/station/{id}/check/start]

Запуск встроенного контроля РЛС (особая программа)

+ Parameters
    + id: `0` (number, required) - ID СМРЛП

### Запустить [POST]

+ Response 200 (application/json)

+ Response 409

+ Response 404

## Текущие значения параметров работы МРЛС [/station/{id}/mrls_status]

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП

+ Response 200 (application/json; charset=utf-8)
    + Attributes(object)
        * packet_number (TitleValuePair) - Номер пакета
        * mode (TitleValuePair) - Режим работы МРЛС
        * scale_base (TitleValuePair) - База масштаба по Д, км
        * countdowns (TitleValuePair) - Отсчетов по Д
        * discrete_size (TitleValuePair) - Размер дискр. Д, м
        * radiation (TitleValuePair) - ПРД: изл. СВЧ
        * info (TitleValuePair) - Инф. МРЛС
        * state (TitleValuePair) - Общ. состояние МРЛС
        * antenna_state (TitleValuePair) - Исправность Ант.
        * ppm_state (TitleValuePair) - Исправность ППМ
        * antenna_az (TitleValuePair) - Прив. Аз Ант.
        * antenna_ea (TitleValuePair) - Прив. УМ Ант.
        * ppm_dsp (TitleValuePair) - ППМ: модуль DSP
        * ppm_sharu (TitleValuePair) - ППМ: рег. ШАРУ
        * ppm_prm (TitleValuePair) - ППМ: ПРМ
        * state_channel (TitleValuePair) - Исправность канала упр.
        * control (TitleValuePair) - КОНТРОЛЬ
        * tubler_az (TitleValuePair) - Тублер привода азимута
        * tubler_ea (TitleValuePair) - Тублер привода УМ
        * az (TitleValuePair) - Азимут, град
        * ea (TitleValuePair) - Угол Места, град
        * ea_posititon (TitleValuePair) - Позиция в программе УМ заданный, град
        * az_ea (TitleValuePair) - Аз смены УМ, град
        * az_right (TitleValuePair) - Правый азимут в режиме СЕКТОР, град
        * az_left (TitleValuePair) - Левый азимут в режиме СЕКТОР, град
        * speed (TitleValuePair) - Угловая скорость Г, град/c
        * ea_position_count (TitleValuePair) - Число позиций УМ
        * bs_position_count (TitleValuePair) - Число позиций секторов блокировки
        * raw_mode (TitleValuePair) - RAW Режим работы МРЛС
        * raw_az (TitleValuePair) - RAW Азимут
        * raw_ea (TitleValuePair) - RAW Угол Места
        * raw_ea_position (TitleValuePair) - RAW Позиция в программе УМ заданный
        * raw_az_ea (TitleValuePair) - RAW Аз смены УМ
        * raw_az_right (TitleValuePair) - RAW Правый азимут в режиме СЕКТОР
        * raw_az_left (TitleValuePair) - RAW Левый азимут в режиме СЕКТОР
        * raw_speed (TitleValuePair) - RAW Угловая скорость Г

# Group Параметры константные

## Справочник типов РЛП [/station/{id}/types/rlp_list{?role}]

Cправочник типов РЛП для СМРЛП

+ Parameters
    + id: `0` (number, required) - ID СМРЛП
    * role (string, optional) - Роль пользователя

### Получить перечень типов РЛП [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes(object)
        - count: 1 (number) - Количество элементов
        - items(array)
            - (object)
                - id: 0 (number) - Уникальный индекс продукта
                - index: `Wpcell` (string) - Строковый индекс продукта
                - title: `Продукт` (string) - Название продукта
                - enable_altitude_scale: false (boolean)
                - mixed_with_other_rlp: false (boolean)

## Справочник типов КС [/station/{id}/types/cs_list{?role}]

Cправочник типов конических сечений для СМРЛП

+ Parameters
    + id: `0` (number, required) - ID СМРЛП
    * role (string, optional) - Роль пользователя

        В текущей реализации есть две роли: - полный список всех продуктов,
        или упрощённый, с одним виртуальным продуктом

### Получить перечень типов КС [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes(object)
        - count: 1 (number) - Количество элементов
        - items(array)
            - (object)
                - id: 12 (number) - Уникальый идентификатор продукта
                - index: `dbz` (string) - Строковый идентификатор продукта
                - title: `Название` (string) - Название продукта


## Критерии классификации типов метеоявлений по умолчанию [/settings/default_weather_criteria]

Типовой (зашитый производителем) перечень критериев классификации МЯ по фиксированному перечню параметров
Для редкатирования см. настроки отдельного СМРЛП - для каждого СМРЛП теоретически могут быть свои критерии

### Получить [GET]

+ Response 200 (application/json; charset=utf-8)
  + Attributes(object, fixed-type)
      - count: 1 (number)
      - items (array[WeatherCriteria])


## Каналы излучения [/settings/{id}/channels]

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП

+ Response 200 (application/json; charset=utf-8)
    + Attributes (array[number])

# Group Продукты и данные

## Выдача паспорта обзора [/station/{id}/passport{?date}]
Выдача паспорта цикла обзора, хранимого на СКОД.

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП
    * date (optional) - Дата обзора

+ Response 200 (application/json; charset=utf-8)
    + Attributes (Passport)

+ Response 404

## Список уведомлений об опасных метеоявлениях [/station/{id}/dangerous_meteo_list]

Список обнаруженных опасных явлений за последний час

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП

+ Response 200 (application/json)

        {
            "count": 3,
            "items": [
                {
                    "date": "2017-05-15T08:39:00",
                    "max_wp_id": 15
                },
                {
                    "date": "2017-05-15T08:49:00",
                    "max_wp_id": 12
                },
                {
                    "date": "2017-05-15T08:59:00",
                    "max_wp_id": 8
                },
                {
                    "date": "2017-05-15T08:59:00",
                    "max_wp_id": 5
                }
            ]
        }




## Получить данные РЛП в формате GeoJSON [/station/{id}/rlp/geojson{?rlp_id}{?altitude}{?date}{?only_dangerous}]
Получить данные РЛП в формате GeoJSON для отрисовки в интерфейсе.
Поддерживаемые РЛП:
"Карта МЯ в контурах" (wpfig)
"Векторное поле скоростей" (vvf)


### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП
    * rlp_id (enum[string]) - id радиолокационного продукта
        + Members
            + `wpfig` - Карта МЯ в контурах
            + `vvf` - Векторное поле скоростей
    * altitude (number, optional) - Высота в метрах [100:20000]
    * date (string, optional) - Дата обзора (если не указан, то возвращается последнее РЛП)
    * only_dangerous (bool, optional) - Флаг фильтрации опасных МЯ

+ Response 200 (application/json; charset=utf-8)

        {
            "timestamp": 1558443985,
            "features": [
                {
                    "geometry": {
                        "coordinates": [
                            48.59446601149474,
                            53.155721716235576
                        ],
                        "type": "Point"
                    },
                    "properties": {
                        "direction": 50.80422403778523,
                        "speed": 11.645474352546344
                    },
                    "type": "Feature"
                },
                {
                    "geometry": {
                        "coordinates": [
                        48.71444634909643,
                        53.155540865545255
                        ],
                        "type": "Point"
                    },
                    "properties": {
                        "direction": 107.41883746050422,
                        "speed": 18.20779815401065
                    },
                    "type": "Feature"
                }
            ]
        }

+ Response 200 (applicaton/json; charset=utf-8)

        {
            "timestamp": 1558443985,
            "features": [
                {
                    "geometry": {
                        "coordinates": [
                            [
                                [
                                48.79764315926358,
                                53.249774115456724
                                ],
                                [
                                48.84273424794033,
                                53.249643790012406
                                ],
                                [
                                48.84250230618656,
                                53.222664595971814
                                ],
                                [
                                48.797439617071355,
                                53.22279482401971
                                ],
                                [
                                48.79764315926358,
                                53.249774115456724
                                ]
                            ]
                        ],
                        "type": "Polygon"
                    },
                    "properties": {
                        "weather": 5
                    },
                    "type": "Feature"
                }
            ]
        }

+ Response 204

+ Response 404


## Вертикальное сечение для Карты РЛП [/vertical_section_wp]

Предоставление вертикального сечения по маршруту для Карты МЯ.

### Получить [POST]

+ Request (application/json)

        {
            "station_id": 1,
            "date": "2017-05-15T08:30:00",
            "route_key_points": [
                [-250.0, 0.0],
                [375.0, 5.0],
                [372.0, -301.0]
            ],
            "_comment_route_cells": "Ключевые точки маршрута",
            "max_altitude": 5000
        }

+ Response 200 (application/json)

        {
                "values": [
                    [4, 100, 2500],
                    [5, 100, 2500],
                    [5, 200, 2500]
                ],
                "user_points": [
                    300.5, 526.29, 991.2
                ]
        }

## Вертикальное сечение для КС [/vertical_section_cs]

Предоставление вертикального сечения по маршруту для конических сечений.

### Получить [POST]

+ Request (application/json)

        {
            "station_id": 1,
            "date": "2017-05-15T08:30:00",
            "cs_id": "dbz",
            "route_key_points": [
                [-250.0, 0.0],
                [375.0, 5.0],
                [372.0, -301.0]
            ],
            "_comment_route_cells": "Ключевые точки маршрута",
            "max_altitude": 5000
        }

+ Response 200 (application/json)

        {
                "heights": [
                    0, 100, 200, 300, 400, 500, 600, 700
                ],
                "values": [
                    [-10.0, -10.0, -10.0, -10.0, -2.5, 3.1, 3.1, -2.8],
                    [-10.0, -10.0, -10.0, -5.2, -2.8, 3.1, 3.1, -2.8],
                    [-10.0, -10.0, -10.0, -5.2, -2.5, 3.4, 3.1, -2.9]
                ],
                "_comment_values": "Столбики значений, по одному на указанную точку маршрута",
                "user_points": [
                    300.5, 526.29, 991.2
                ],
                "min_altitude": 150.0,
                "max_altitude": 3450.0
        }

## Вертикальный профиль [/vertical_profile]

Предоставление вертикального профиля для выбранного КС на заданном диапазоне  высот

### Получить [POST]

+ Request  (application/json)

        {
            "station_id": 1,
            "date": "2017-05-15T08:30:00",
            "marker_pos": {
                "latitude": 55.807775,
                "longitude": 37.566814
            },
            "max_altitude": 5000.2,
            "cs_type": 2
        }

+ Response 200 (application/json)

        {
            "heights": [
                0,
                100,
                200,
                300,
                400,
                500,
                600,
                700,
                800,
                900,
                1000,
                1100,
                1200,
                1300,
                1400
                ],
            "values": [
                -10,
                -10,
                -10,
                -10,
                -10,
                -10,
                -10,
                -10,
                -10,
                -10,
                -10,
                -10,
                -10,
                -10,
                -10
                ]
        }

## Данные метео [/station/{id}/nams_data{?date}]

Получение данных от метедатчиков СМРЛП (сортированные)

+ Parameters
    + id: `0` (number, required) - ID СМРЛП
    * date (optional) - Дата запроса данных (если не указана, то возвращается последние метеоданные)

### Получить [GET]

+ Response 200 (application/json)
    + Attributes (object)
        - date: `2018-01-30T23:59:55+00:00` (string) - ISO дата
        - humidity    : 0 (string) - влажность - %
        - pressure: 95120 (string) - давление - мм.рт.с
        - wind_azimuth: 29 (string) - направление ветра - градусы
        - wind_speed: 2 (string) - скорость ветра - м/c
        - temp: `-34.5` (string) - температура - градусы Цельсия


## Получение данных метеостатистики [/station/{id}/meteo_stat{?date}]

Получение данных метеостатистики для обзоров (сортированные)

+ Parameters
    + id: `0` (number) - ID СМРЛП
    * date (optional) - Дата запроса данных (если не указана, то возвращается последняя метеостатистика)

### Получить [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes (object, fixed-type)
        - velocityMOAbs: 25.0 (number) - скорость перемещения облачных облазований (м/с)
        - velocityMOAz: 110.0 (number) - направление перемещения облачных облазований (градусы)
        - altitudeMaxMO: 5600 (number) - максимальная верхняя граница облачности (км)
        - altitudeMinRefl: 700 (number) - минимальная нижняя граница радиоэха (км)
        - max_wp_id: 1 (number) - максимальное МЯ - идентификатор из списка
        - min_wp_id: 1 (number) - минимальное МЯ - идетификатор из списка
        - date: `2018-01-30T17:25:52+00:00` (string) - Дата ISO-формат

## Список архивных обзоров [/station/{id}/archive_product_list]

Общий для РЛП и КС (сортированный)

+ Parameters
    + id: `0` (number) - ID радара

### Получить [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes (object, fixed-type)
        - count: 1 (number) - Количество элементов
        - items (array)
            - (object)
                - date: `2018-01-30T17:25:52` (string) - Дата обзора в ISO формате без TZ


## Получение карт РЛП [/station/{id}/rlp/{type}/{?rlp_id}{?only_dangerous}{?altitude}{?date}{?cell_size}{?radius}]

Получение карт РЛП для обзоров (сортированные)

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП
    + type: `png` (str) - тип данных, для данной итерации всегда png
    * rlp_id: `1` (number) - id радиолокационного продукта
    * only_dangerous (boolean, optional) - отображать только ОМЯ [True/False]
        + Default: `false`
    * altitude: `0` (optional) - Высота в метрах [100:20000]
        + Default: `0`
    * date (optional) - Дата обзора (если не указан, то возвращается последнее РЛП)
    * cell_size (optional) - Размер области, которую покрывает 1 пиксель в м., в текущей итерации всегда 1000
        + Default: `1000`
    * radius (optional) - Радиус обзора в км., в текущей итерации всегда 100
        + Default: `100`

+ Response 200 (application/json)

        {
            "date": "2017-12-28T08:00:49+00:00",
            "type": "png",
            "params": {"radius": 100.0, "cell_size": 1000.0, "image_size": 209},
            "url": "/wpcell.png"
        }

## Получение высот для некоторых РЛП [/station/{id}/rlp_altitudes{?date}]
От 0.1 до 20.0

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП
    * date (optional) - Дата обзора

+ Response 200 (application/json)

        [
            0.1,
            0.3,
            0.6,
            1.0,
            1.5,
            2.0,
            2.2,
            2.4,
            2.6,
            2.8,
            3.0,
            3.2,
            3.4,
            3.6,
            3.8
        ]

+ Response 404

## Получение высот для КС [/station/{id}/cs_altitudes{?date}]
От 0.1 до 20.0

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП
    * date (optional) - Дата обзора

+ Response 200 (application/json)

        [
            0.1,
            0.2,
            0.3,
            0.4,
            0.5,
            0.6,
            0.7,
            0.8,
            0.9,
            1.0,
            1.1,
            1.2,
            1.3,
            1.4,
            1.5,
            1.6,
            1.7,
            1.8,
            1.9,
            2.0,
            2.1
        ]

+ Response 404

## Получение КС [/station/{id}/cs/{type}/{?cs_id}{?indicator}{?altitude}{?date}{?cell_size}{?radius}{?angle}{?bufr_quality}]

Получение конических сечений для обзоров (сортированные)

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП
    + type: `png` (string) - тип данных, для данной итерации всегда png
    * cs_id: `13` (int) - тип конического сечения
    * indicator: `maxcappi` (string) -  CAPPI / PPI / MAXCAPPI
    * altitude: `100` (number) - Высота в метрах (только для CAPPI) [100:20000]
    * date (string, optional) - Дата обзора (если не указан, то возвращается последнее КС)
    * cell_size (number, optional) - Размер области, которую покрывает 1 пиксель в м., в текущей итерации всегда 1000
    * radius (number, optional) - Радиус обзора в км., в текущей итерации всегда 100
    * angle (number, optional) - Угол места (градусы) (только для PPI) [0.0:90.0]
        + Default: `0`
    * bufr_quality (boolean, optional) - Флаг низкого качества отрисовки из GUI
        + Default: `false`


+ Response 200 (application/json)

        {
            "date": "2018-01-30T17:25:52+00:00",
            "type": "png",
            "params": {"radius": 100.0, "cell_size": 1000.0, "image_size": 200},
            "url": "/rlp/0/?img=monocle-autodor-node-001_2018-01-30_17-25-52_cs-dbz-cappi-100-120-1000.png"
        }

+ Response 404

## Получение углов места [/station/{id}/angles_array{?date}]

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП
    * date (string, optional) - Дата обзора

+ Response 200 (application/json)

        {
            "angles": [
                0.0,
                0.791015625,
                1.58203125,
                2.373046875,
                3.1640625,
                4.04296875,
                4.833984375,
                5.625,
                6.416015625,
                7.20703125,
                7.998046875,
                8.7890625,
                9.580078125,
                10.37109375,
                12.392578125,
                14.4140625,
                16.34765625,
                34.453125,
                37.44140625,
                40.4296875,
                43.41796875,
                46.40625,
                49.39453125
            ]
        }

+ Response 404

## Метеоинформация в указанной точке [/station/{id}/marker_data]

Получение данных маркера для указанного списка продуктов.
distance, x, z - в километрах

### Получить [POST]

+ Parameters
    + id: `0` (number) - ID СМРЛП

+ Request (application/json)

        {
            "date": "2018-01-30T17:25:52+00:00",
            "point": {
                "latitude": 55.807775,
                "longitude": 37.566814
            },
            "types": [
                "wpcell",
                "vvf",
                "dbz"
            ],
            "altitude_index": 0,
            "_comment_altitude_index": "Индекс отображаемого слоя по высоте (актуально только для сдвигов ветра - wsh и wsv)"
        }

+ Response 200 (application/json)

        {
            "data": [
                {
                    "type": "wpcell",
                    "title": "Метеоявления",
                    "strings": [
                        "Ливень слабый"
                    ]
                },
                {
                    "type": "vvf",
                    "title": "Векторное поле скоростей",
                    "strings": [
                        "Высота: 4.5 км",
                        "Скорость: 26.1 м/с"
                    ]
                },
                {
                    "type": "dbz",
                    "title": "Отражаемость",
                    "strings": [
                        "0.0 дБZ"
                    ]
                }
            ]
        }

# Group Настройки


## Настройки критериев МЯ для отдельного СМРЛП [/station/{id}/meteosettings]

Настройки критериев метеоявлений для отдельного СМРЛП. Эти
настройки переопределяют значения общих настроек, задаваемых
в запросе "Критерии классификации типов метеоявлений по умолчанию"

+ Parameters
    + id: `0` (number, required) - ID СМРЛП

### Получить [GET]

+ Response 200 (application/json; charset=utf-8)
  + Attributes (MeteoSettings)

+ Response 404

### Обновить настройки СМРЛП [PUT]

+ Request (application/json)

        {
            "min_dangerous_meteo": 5,
            "cloud_velocity_radial": true,
            "meteo_classes":
            {
                "count": 2,
                "items":
                [
                    {
                        "index": 0,
                        "id": 2,
                        "type": "Слоистая облачность",
                        "criteria":
                        {
                            "count": 1,
                            "items":
                            [
                                {
                                    "index": 0,
                                    "code": "Cl_bH_min",
                                    "title": "Пороговое значение HНГ для облачности верхнего и среднего ярусов",
                                    "measurement_unit": " м",
                                    "warm": 3000,
                                    "cold": 3000
                                }
                            ]
                        }
                    },
                    {
                        "id": 2,
                        "type": "Облачность (кучевая облачность)",
                        "criteria":
                        {
                            "count": 1,
                            "items":
                            [
                                {
                                    "index": 0,
                                    "code": "Cl_dBZ2_min",
                                    "title": "Минимальное значение радиолокационной отражаемости на уровне Z2",
                                    "measurement_unit": "dBZ",
                                    "warm": 35,
                                    "cold": 30
                                },
                                {
                                    "index": 1,
                                    "code": "Cl_dBZ3_min",
                                    "title": "Минимальное значение радиолокационной отражаемости на уровнях Z3",
                                    "measurement_unit": "dBZ",
                                    "warm": 35,
                                    "cold": 30
                                }
                            ]
                        }
                    }
                ]
            }
        }

+ Response 422

        {
            "meteo_classes":
            {
                "count": 1,
                "items":
                [
                    {
                        "index": 0,
                        "criteria":
                        {
                            "count": 1,
                            "items":
                            [
                                {
                                    "index": 0,
                                    "cold": "Невалидное значение"
                                }
                            ]
                        }
                    }
                ]
            }
        }

+ Response 200 (application/json)

        {
            "min_dangerous_meteo": 5,
            "cloud_velocity_radial": true,
            "meteo_classes":
            {
                "count": 2,
                "items":
                [
                    {
                        "index": 0,
                        "id": 2,
                        "type": "Слоистая облачность",
                        "criteria":
                        {
                            "count": 1,
                            "items":
                            [
                                {
                                    "index": 0,
                                    "code": "Cl_bH_min",
                                    "title": "Пороговое значение HНГ для облачности верхнего и среднего ярусов",
                                    "measurement_unit": " м",
                                    "warm": 3000,
                                    "cold": 3000
                                }
                            ]
                        }
                    },
                    {
                        "id": 2,
                        "type": "Облачность (кучевая облачность)",
                        "criteria":
                        {
                            "count": 1,
                            "items":
                            [
                                {
                                    "index": 0,
                                    "code": "Cl_dBZ2_min",
                                    "title": "Минимальное значение радиолокационной отражаемости на уровне Z2",
                                    "measurement_unit": "dBZ",
                                    "warm": 35,
                                    "cold": 30
                                },
                                {
                                    "index": 1,
                                    "code": "Cl_dBZ3_min",
                                    "title": "Минимальное значение радиолокационной отражаемости на уровнях Z3",
                                    "measurement_unit": "dBZ",
                                    "warm": 35,
                                    "cold": 30
                                }
                            ]
                        }
                    }
                ]
            }
        }

+ Response 409

+ Response 404

## Настройки МРЛС [/station/{id}/radarsettings]

Настройки МРЛС на выбранном СМРЛП. Запрос может выполняться только если
РЛС находится в режиме ГОТОВНОСТЬ. Режим можно узнать из текущего статуса.
При попытке запросить настройки в режиме, отличном от ГОТОВНОСТи, возвращается 409
При указании невалидного id СМРЛП, возвращается 404

+ Parameters
    + id: `0` (number, required) - ID СМРЛП

### Получить настройки МРЛС [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes(RadarSettings)

### Обновить настройки МРЛС [PUT]

+ Request (application/json)
    + Attributes(RadarSettings)


+ Response 200 (application/json)
    + Attributes(RadarSettings)

+ Response 422

        {
                "channel_id": "Невалидное значение",
                "hold_azimuth": "Невалидное значение",
                "hold_tilt": "Невалидное значение",
                "azimuth_center": "Невалидное значение"
        }

+ Response 409

+ Response 404

## Программы [/program/list{?mode}{?title}{?limit}{?offset}]

Работа по списком программ (для всей АС СМРЛП)

### Получить список программ [GET]

+ Parameters
    * mode (number, optional) - Фильтр режима
    * title (string, optional) - Фильтр по названию
    * limit (number, optional)- Количество строк на странице
    * offset (number, optional) - Начиная с какой позиции выводить элементы

+ Response 200 (application/json; charset=utf-8)
    + Attributes(object)
        - count: 0 (number) - Количество элементов
        - items (array[Program])


## Программа [/program/{id}]

Работа с заданной программой (для всей АС СМРЛП)

+ Parameters
    + id: `default` (string) - Уникальный идентификтор программы

### Получить [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes(Program)

+ Response 404

### Удалить программу [DELETE]

+ Response 204

+ Response 409

        {
            "count": 2,
            "station_ids": [1,4]
        }

+ Response 404

### Создать программу [POST /program]

+ Request (application/json)
    + Attributes (Program)


+ Response 422 (application/json)

    + Body

            {
                "program": {
                    "angles_array": "Присутствуют невалидные значения",
                    "av_azimuth_change": "Невалидное значение",
                    "azimuth_scan_speed": "Невалидное значение",
                    "blank_sectors_array": "Присутствуют невалидные значения",
                    "mode": "Невалидное значение",
                    "raster_left_azimuth": "Невалидное значение",
                    "raster_right_azimuth": "Невалидное значение",
                    "scope_range": "Невалидное значение",
                    "duration": "Невалидное значение"
                }
            }

+ Response 201 (application/json)

### Обновить программу [PUT]

+ Request (application/json)
    + Attributes (Program)

+ Response 200 (application/json)

+ Response 422 (application/json)

    + Body

            {
                "program": {
                    "angles_array": "Присутствуют невалидные значения",
                    "av_azimuth_change": "Невалидное значение",
                    "azimuth_scan_speed": "Невалидное значение",
                    "blank_sectors_array": "Присутствуют невалидные значения",
                    "mode": "Невалидное значение",
                    "raster_left_azimuth": "Невалидное значение",
                    "raster_right_azimuth": "Невалидное значение",
                    "scope_range": "Невалидное значение",
                    "duration": "Невалидное значение"
                }
            }

+ Response 409

        {
            "count": 2,
            "station_ids": [1,4]
        }

+ Response 404

## Журнал событий [/station_log/list{?type}{?station}{?from}{?to}{?limit}{?offset}]

Получение журнала событий заданного СМРЛП

### Получить список событий [GET]

+ Parameters
    * type (LogLevelEnum, optional) - Тип события, информация или ошибка
    * station: `0` (number) - id СМРЛП
    * from (string, optional) - Начальный период поиска ISO Date
    * to (string, optional) - Конечный период поиска ISO Date
    * limit (number, optional) - Количество строк на странице
    * offset (number, optional) - Начиная с какой позиции выводить элементы

+ Response 200 (application/json)
    + Attributes(object)
        - count: 1 (number) - Количество элементов
        - items (array[LogMessage]) - Сообщения


## Построение карт РЛП [/settings/productrender]

Настройки алгоритма построения карт РЛП

### Получить настройки для построения карт РЛП [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes(ProductRenderer)

### Обновить настройки для построения карт [PUT]

+ Request (application/json)
    + Attributes(ProductRenderer)


+ Response 200 (application/json)
    + Attributes(ProductRenderer)

+ Response 422 (application/json)

        {
            "vector_velocity_field": {
                "circular_horizontal_pitch": "Невалидное значение",
                "circular_vertical_pitch": "Невалидное значение",
                "sector_horizontal_pitch": "Невалидное значение",
                "sector_vertical_pitch": "Невалидное значение",
            },
            "wind_shear_field": {
                "sector_max_range": "Невалидное значение"
            },
            "vertically_integrated_liquid": {
                "cell_size": "Невалидное значение"
            }
        }

## Список настроек цветовых шкал [/settings/color_scale/list]

Цветовые шкалы - легенды при выводе продуктов

### Получить список настроек цветовых шкал [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes(object)
        - count: 1 (number) - Количество элементов
        - items (array[ColorScale]) - Цветовые шкалы

## Настройки цветовой шкалы [/settings/color_scale/{id}]

Редактирование цветовых шкал

+ Parameters
    + id: `0` (number) - ID раздела настроек цветовой шкалы

### Обновить настройки цветовой шкалы [PUT]

+ Request (application/json)
    + Attributes(array[ColorScaleItem])

+ Response 200 (application/json; charset=utf-8)
    + Attributes(array[ColorScaleItem])

+ Response 422 (application/json)


        [
            {
                "index": 1,
                "value": "Невалидное значение",
                "color": "Невалидное значение"
            }
        ]

+ Response 404

## Настройки цветовой шкалы по умолчанию [/settings/color_scale/{id}/default]

Всегда может понадобиться сбросить цветовую шкалу в состояние "по-умолчанию"

+ Parameters
    + id: `0` (number) - ID раздела настроек цветовой шкалы

### Получить настройки цветовой шкалы по умолчанию [GET]

+ Response 200 (application/json)
    + Attributes(ColorScale)

## Поправка на север [/north_azimuth/{id}]

Получение и изменение текущей заданной на МРЛС поправки на север (нулевого азимута)
Изменение происходит с заданием расстояний до ориентиров

+ Parameters
    + id: `0` (number) - ID СМРЛП

### Получить [GET]

+ Response 200 (application/json)
    + Attributes(object)
        * center_azimuth: `12.5` (number) - Установленное в МРЛС значение нулевого азимута, град.

+ Response 404

### Установить [POST]

+ Request (application/json)
    + Attributes(object)
        * dist_to_north: 200.0 (number) - Расстояние до ориентира на Север, м
        * dist_to_install: 300.3 (number) - Расстояние до ориентира установки, м
        * dist_north_install: 100.0 (number) - Расстояние между ориентиром на Север и ориентиром установки, м
        * install_at_west: true (boolean) - Положение ориентира установки относительно антенны (true - западнее, false - восточнее)


+ Response 200

+ Response 422 (application/json)

        {
            "dist_to_north": "Невалидное значение",
            "dist_to_install": "Невалидное значение",
            "dist_north_install": "Невалидное значение",
            "install_at_west": "Невалидное значение"
        }





## Актуальные значения оперативных параметров МП [/station/{id}/meteo]
Получение и обновление актуальных значений ОМП МП из разных источников МП.
Если какие-то источники МП недоступны, то при обновлении значений эти источники в массив не включаются.

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП

+ Response 200 (application/json; charset=utf-8)

        {
            "sources": [
                {
                    "date": "2019-09-19T14:22:41",
                    "available": true,
                    "auto": false,
                    "name": "manual",
                    "hiso0": 1000,
                    "hiso22": 4245,
                    "htropo": 13782,
                    "season": "warm"
                },
                {
                    "available": false,
                    "name": "nams",
                    "auto": true
                },
                {
                    "date": "2019-09-19T14:22:41",
                    "available": true,
                    "auto": true,
                    "name": "mtp5",
                    "hiso0": 0,
                    "hiso22": 3245,
                    "htropo": 12782,
                    "season": "cold"
                },
                {
                    "date": "2019-09-19T14:22:41",
                    "available": true,
                    "auto": true,
                    "name": "athm",
                    "hiso0": 0,
                    "hiso22": 3245,
                    "htropo": 12782,
                    "season": "cold"
                }
            ],
            "_comment_sources": "Массив контейнеров ОМП МП из разных источников"
        }

### Обновить [POST]

+ Parameters
    + id: `0` (number) - ID CMРЛП

+ Request (application/json)

        {
            "date": "2019-09-19T14:22:41",
            "_comment_date": "Дата и время измерения ОМП",
            "sources": [
                {
                    "name": "manual",
                    "hiso0": 0,
                    "hiso22": 3245,
                    "htropo": 12782
                },
                {
                    "name": "nams",
                    "hiso0": 0,
                    "hiso22": 3245,
                    "htropo": 12782
                },
                {
                    "name": "mtp5",
                    "hiso0": 0,
                    "hiso22": 3245,
                    "htropo": 12782
                },
                {
                    "name": "athm",
                    "hiso0": 0,
                    "hiso22": 3245,
                    "htropo": 12782
                }
            ],
            "_comment_sources": "Массив контейнеров ОМП МП из разных источников"
        }

+ Response 200

## Параметры алгоритмов обработки метео данных [/station/{id}/algorithmparameters]
Получение параметров алгоритмов обработки метео данных

### Получить текущее состояние [GET]

+ Parameters
    - id: `0` (number) - ID СМРЛП

+ Response 200 (application/json; charset=utf-8)
    + Attributes(AlgorithmParameters)

### Обновить параметры [PUT]

+ Parameters
    - id: `0` (number) - ID СМРЛП

+ Request (application/json)
    + Attributes(AlgorithmParameters)

+ Response 200 (application/json)

    {
    }

## Калибровка изотермы [/station/{id}/isotherm]

Настройка изотермы (0, -22 градуса), высоты тропопаузы,
переключение автоматического/ручного режима задания, ввод параметров вычисления.

+ Parameters
    + id: `0` (number, required) - ID СМРЛП

### Получить настройки вычисления изотермы [GET]

+ Response 200 (application/json)

        {
            "_comment_manual": "Задаётся ли высота нулевой изотермы вручную. Если false - вычисляется из данных НАМС",
            "manual": false,
            "_comment_expire_period": "Время истечения заданного вручную значения, ч",
            "expire_period": 12,
            "_comment_update_time": "Время последнего обновления",
            "update_time": "2017-05-15T08:30:00",
            "_comment_height_temp0": "Высота нулевой изотермы, задаваемая вручную",
            "height_temp0": 2400.0,
            "_comment_height_temp22": "Высота изотермы -22 градуса, задаваемая вручную",
            "height_temp22": 7000.0,
            "_comment_height_tropopause": "Высота тропопаузы, задаваемая вручную",
            "height_tropopause": 12000.0
        }

+ Response 404

### Обновить настройки вычисления изотермы [PUT]

+ Request (application/json)

        {
            "manual": false,
            "expire_period": 12,
            "_comment_manual_from_temp": "true: задаётся температура на уровне земли, false: задаётся высота нулевой изотермы",
            "manual_from_temp": false,
            "_comment_temperature": "Температура на уровне земли, задаваемая вручную",
            "temperature": 15.2,
            "height_temp0": 2400.0,
            "height_temp22": 7000.0,
            "height_tropopause": 12000.0
        }

+ Response 200 (application/json)

        {
            "manual": false,
            "expire_period": 12,
            "update_time": "2017-05-15T08:30:00",
            "height_temp0": 2400,
            "height_temp22": 7000,
            "height_tropopause": 12000
        }

+ Response 422 (application/json)

        {
            "temperature": "Невалидное значение",
        }

+ Response 404

+ Response 409

#Group Уведомления

## Уведомления [/notification]

Поднимаем один вебсокет для общения с интерфейсом. В поле type указываем типа уведомления. Состав content'a зависит от типа

## Уведомление об окончании обработки очередного пакета данных [/notify/new_product]

### Отправить уведомление [GET]
+ Response 200 (application/json)

        {
            "type": "new_product",
            "content": {
                "station_id": 0,
                "date": "2017-05-15T08:30:00",
                "max_wp_id": 15
            }
        }

## Устаревшее [/deprectated]

### Уведомление об об отказе компонентов системы

+ Request (application/json)

        {
            "type": "failure_message",
            "content": {
                "station_id":0,
                "message": "Отказ метео локатора",
                "date": "2017-05-15T08:30:00"
            }
        }

## Уведомление о соcтоянии [/notify/new_state]
Отправка уведомления о состоянии СМРЛП. URL реально не используется.
### Отправить уведомление [GET]
Тут 4 статуса будет приходить одновременно:
 Статус исправности СМРЛП
 Актуальность изотермы
 Ведется запись местных отражений
 Ведется проверка работоспособности
 И если потом пригодится:
 Статус связи
 Прогресс

+ Response 200 (application/json)

        {
            "type": "state",
            "content": {
                "station_id": 4,
                "equipment_status": true,
                "isotherm_status": true,
                "local_reflections_status": false,
                "control_status": false,
                "exchange_status": true,
                "rotation_status": 60
            }
        }


## Уведомление об обновлении настроек [/station/{id}/notify_settings_changed]
Уведомления об обновлении настроек

### Отправить уведомление о изменении настроек СМРЛП[POST]

+ Parameters
    + id: `0` (number) - ID СМРЛП

+ Request (application/json)

        {
            "type": "notification",
            "content": {
                "station_id": 4,
                "message": "Настройки СМРЛП Орловка успешно обновлены",
                "date": "2017-05-15T08:30:00"
            }
        }

+ Response 200 (application/json)

        {
        }

# Group Qt-интерфейс

## Получение настроек для Qt интерфейса [/station/{id}/settings/qtiface]
Запросы для управления всеми настройками из Qt интерфейса

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП

+ Response 200 (application/json)

        {
                "station": {
                        "id": 0,
                        "index": "MORL",
                        "baltrad_index": "abcdefgh",
                        "path": "monocle-mrlk-bz-ga",
                        "synopt_index": "1",
                        "title": "Орловка",
                        "latitude": 56.142616,
                        "longitude": 34.987386,
                        "alarm_id": 0,
                        "hardware_id": "CMRC0001",
                        "radar_present": true,
                        "nams_present": true,
                        "mtp_present": true,
                        "terrain_altitude": 638,
                        "radar_elevation": 25,
                        "pressure_sensor_elevation": 0,
                        "mtp_elevation": 0,
                        "terrain_type": 0,
                        "current_program": {
                            "id": "Нет данных",
                            "timetable_enabled": false,
                            "title": "Нет данных",
                            "timetable_id": "view_dummy_150"
                        },
                        "local_reflections_status": "Нет данных",
                        "equipment_status": false,
                        "exchange_status": false,
                        "rotation_status": 0,
                        "precipitaion_elevation_calc" : 0
                    },
                "spg": {
                    "vector_velocity_field": {
                        "circular_horizontal_pitch": 8000,
                        "circular_vertical_pitch": 1000,
                        "sector_horizontal_pitch": 8000,
                        "sector_vertical_pitch": 1000,
                        "vector_size": 30,
                        "vector_thickness": 2,
                        "filterSMAOn": true,
                        "kLongRangeSizeOverlapH": 3.75,
                        "kLongRangeSizeOverlapV": 2,
                        "kMediumRangeSizeOverlapH": 3.25,
                        "kMediumRangeSizeOverlapV": 1.75,
                        "kShortRangeSizeOverlapH": 2,
                        "kShortRangeSizeOverlapV": 1.5,
                        "longRAzCellFillThreshold": 15,
                        "longRAzCellThreshold": 17,
                        "mediumRAzCellFillThreshold": 17,
                        "mediumRAzCellThreshold": 23,
                        "shortRAzCellFillThreshold": 15,
                        "shortRAzCellThreshold": 20,
                        "thresholdDeltaVelosity": 0.0001,
                        "thresholdEpcilonVelosity": 0.001
                    },
                    "vertically_integrated_liquid": {
                        "stepbuild": 1000
                    },
                    "wind_shear_field": {
                        "circular_max_altitude": 3000,
                        "circular_max_range": 50000,
                        "sector_max_altitude": 3000,
                        "sector_max_range": 50000,
                        "horizontal_pitch": 500,
                        "vertical_pitch": 500
                    }
                },
                "render": {
                    "colorscale": {
                        "change": false,
                        "dbz": {
                            "items": [
                            {
                                "color": 14474460,
                                "val": -30.0
                            }
                            ],
                            "alphaBtm": -10,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 10,
                            "outDval": 2.5,
                            "size": 18,
                            "stepScale": true
                        },
                        "dwvs": {
                            "items": [
                            {
                                "color": 1052947,
                                "val": 0.25
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0,
                            "outDval": 0.1,
                            "size": 9,
                            "stepScale": true
                        },
                        "edr": {
                            "items": [
                            {
                                "color": 16777215,
                                "val": 0.0
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0.05,
                            "outDval": 0.01,
                            "size": 13,
                            "stepScale": true
                        },
                        "htmax": {
                            "items": [
                            {
                                "color": 981670,
                                "val": 0.0
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 1,
                            "outDval": 0.1,
                            "size": 18,
                            "stepScale": true
                        },
                        "htmin": {
                            "items": [
                            {
                                "color": 15725053,
                                "val": 0.0
                            }
                            ],
                            "alphaBtm": -1,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": -0.5,
                            "outDval": 0.1,
                            "size": 18,
                            "stepScale": true
                        },
                        "rfli": {
                            "items": [
                            {
                                "color": 65669,
                                "val": 0.5
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0.1,
                            "outDval": 0.1,
                            "size": 10,
                            "stepScale": true
                        },
                        "rfls12": {
                            "items": [
                            {
                                "color": 16777215,
                                "val": 0.01
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0.01,
                            "outDval": 0.01,
                            "size": 18,
                            "stepScale": true
                        },
                        "rfls24": {
                            "items": [
                            {
                                "color": 16777215,
                                "val": 0.01
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0.02,
                            "outDval": 0.01,
                            "size": 18,
                            "stepScale": true
                        },
                        "rfls3": {
                            "items": [
                            {
                                "color": 16777215,
                                "val": 0.01
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0.01,
                            "outDval": 0.01,
                            "size": 18,
                            "stepScale": true
                        },
                        "rfls6": {
                            "items": [
                                {
                                    "color": 16777215,
                                    "val": 0.01
                                }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0.01,
                            "outDval": 0.01,
                            "size": 18,
                            "stepScale": true
                        },
                        "undefined": {
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0,
                            "outDval": 0,
                            "size": 0,
                            "stepScale": false
                        },
                        "vil": {
                            "items": [
                                {
                                    "color": 16777215,
                                    "val": 0.001
                                }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0.01,
                            "outDval": 0.001,
                            "size": 18,
                            "stepScale": true
                        },
                        "vr": {
                            "items": [
                            {
                                "color": 5551057,
                                "val": -50.0
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": true,
                            "alphaTop": 0.1,
                            "outDval": 0.1,
                            "size": 19,
                            "stepScale": true
                        },
                        "wpcell": {
                            "items": [
                            {
                                "color": 16777215,
                                "val": 0.0
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0.5,
                            "outDval": 1,
                            "size": 20,
                            "stepScale": true
                        },
                        "wpfig": {
                            "items": [
                            {
                                "color": 16777215,
                                "val": 0.0
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0.5,
                            "outDval": 1,
                            "size": 20,
                            "stepScale": true
                        },
                        "wsh": {
                            "items": [
                            {
                                "color": 13235437,
                                "val": 0.0
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 0.01,
                            "outDval": 0.25,
                            "size": 27,
                            "stepScale": true
                        },
                        "wsv": {
                            "items": [
                            {
                                "color": 13693163,
                                "val": 0.0
                            }
                            ],
                            "alphaBtm": 0,
                            "alphaCenter": 0,
                            "alphaCenterOn": false,
                            "alphaTop": 3,
                            "outDval": 0.1,
                            "size": 27,
                            "stepScale": true
                        }
                    },
                    "maps": {
                        "contourResolution": 400,
                        "rp_opacity": {
                            "items": [
                                1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1
                                ]
                        },
                        "rp_z_value": {
                            "items": [
                                1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            1,
                            8,
                            9,
                            10,
                            11,
                            12,
                            1
                                ]
                        },
                        "showRegionData": true,
                        "terrainGroundSize": 668,
                        "terrainHorizontalShift": 0,
                        "terrainVerticalShift": 0
                    },
                    "vertical_section": {
                        "automaxheight": 0,
                        "maxheight": 7.5,
                        "horizontal_pitch": 100,
                        "vertical_pitch": 100
                    },
                    "horizontal_section": {
                        "cappi_altitude_interval": 100,
                        "cappi_altitude_max": 20000,
                        "cappi_altitude_min": 0
                    }
                },
                "programs": [
                {
                    "description": "",
                    "isDefault": true,
                    "name": "ЗАГЛУШКА ОБЗОР 150 КМ 45-62°",
                    "program": {
                        "mode": 4,
                        "blank_sectors_array": [
                        {
                            "start" : 0.0,
                            "end": 0.0
                        }
                        ],
                        "av_azimuth_change": 0,
                        "azimuth_scan_speed": 23.82,
                        "raster_left_azimuth": 30,
                        "raster_right_azimuth": 60,
                        "scope_range": 150,
                        "angles_array": [
                            0.0
                        ]
                    },
                    "id": "view_dummy_150"
                }
            ],
            "meteo": {
                "min_dangerous_meteo": 5,
                "max_dangerous_meteo": 19,
                "cloud_velocity_radial": true,
                "meteo_classes": [
                {
                    "id": 1,
                    "type": "Облачность верхнего и среднего ярусов",
                    "criteria": [
                    {
                        "code": "Cl_bH_min",
                        "title": "Пороговое значение HНГ для облачности верхнего и среднего ярусов",
                        "measurement_unit": " м",
                        "warm": 0.0,
                        "cold": 0.0
                    }
                    ]
                }
                ]
            },

            "timetable": [
            {
                "program_id": "view_dummy_150",
                "date": "00:00:00"
            }
            ],
            "bufr" : {
                "count": 1,
                "items":
                    [
                    {
                        "active": true,
                        "ip": "hostname",
                        "port": 21,
                        "path": "",
                        "login": "login",
                        "password": "password",
                        "active_mode": false,
                        "stations": [
                        {
                            "id": 0,
                            "title": "TITLE",
                            "products": {
                                "wpcell" : true,
                                "htmax" : true,
                                "dbz": false,
                                "rfli": false,
                                "rfls3up24": true
                            }
                        }
                        ]

                    }
                ]
            },
            "qtiface": {
                "calibration_period": {
                    "warm": 3,
                    "cold": 72
                },
                "db": {
                    "show_data_time_local": true,
                    "time_to_live": 30
                },
                "advanced_soft_mode": false,
                "show_cycle_meteostat": true,
                "paths": {
                    "terrain": "",
                    "transparent_map": "",
                    "dangerous_meteo_sound": ""
                },
                "datum": "WGS-84"
            },
            "dpm": {
                "dataprocessing": {
                    "manual_dbz_correction": 0,
                    "anglev_dbz_correction_enable": 0,
                    "WeightWindow": 1,
                    "accumulatorSize": 59,
                    "autoAccumulatorSize": 1,
                    "autoKsOn": 1,
                    "coefficientKs_10": 57.9382019,
                    "coefficientKs_100": 57.9485009,
                    "coefficientKs_150": 61.4485009,
                    "coefficientKs_20": 57.9382019,
                    "coefficientKs_200": 57.9485009,
                    "coefficientKs_25": 58.4382019,
                    "coefficientKs_50": 57.9382019,
                    "coefficientKs_55": 63.2382049,
                    "falseAlarmMFOffProbability": 3e-7,
                    "falseAlarmProbability": 0.03,
                    "indexProtoAv": 9,
                    "kaperturef": 1.75,
                    "kaperturerange": 2,
                    "coeffIncreaseSingleTargetLF": 1,
                    "linearNoiseFilterEnabled": 1,
                    "medianFiltrOn": 1,
                    "minreflectionrange": 1,
                    "oneTgtFiltrOn": 1,
                    "outDataPixelFilterOn": 0,
                    "outDataPixelFilterMaxHeight": 20000,
                    "pulsePeriod0Value10": 0.000243,
                    "pulsePeriod0Value100": 0.000999,
                    "pulsePeriod0Value150": 0.001224,
                    "pulsePeriod0Value20": 0.000243,
                    "pulsePeriod0Value200": 0.001989,
                    "pulsePeriod0Value25": 0.000495,
                    "pulsePeriod0Value50": 0.000495,
                    "pulsePeriod0Value55": 0.000999,
                    "pulsePeriod1Value10": 0.000243,
                    "pulsePeriod1Value100": 0.001143,
                    "pulsePeriod1Value150": 0.001377,
                    "pulsePeriod1Value20": 0.000243,
                    "pulsePeriod1Value200": 0.001989,
                    "pulsePeriod1Value25": 0.000594,
                    "pulsePeriod1Value50": 0.000594,
                    "pulsePeriod1Value55": 0.001143,
                    "sigmaAmbientNoise_100": 6.71100342110189e-18,
                    "sigmaAmbientNoise_150": 7.81796275566459e-18,
                    "sigmaAmbientNoise_50": 6.53831724970232e-18,
                    "sigmaAmbientNoise_55": 7.72873151205209e-18,
                    "tauPulseValue10": 0.0000021,
                    "tauPulseValue100": 0.000016125,
                    "tauPulseValue150": 0.000024,
                    "tauPulseValue20": 0.0000021,
                    "tauPulseValue200": 0.0000321,
                    "tauPulseValue25": 0.000004125,
                    "tauPulseValue50": 0.0000081,
                    "tauPulseValue55": 0.0000195,
                    "spectralLReflFirtrOn": 1,
                    "localReflSpectralSize": 17,
                    "coeffReflMeanSpectreTreshold": 100,
                    "coeffLReflSpectralZeroPwr": 0.9,
                    "coeffDeltaPwrQuant": 0.25,
                    "maxLRPwrValueOn": 1,
                    "velocity_mo_abs_step": 2.5,
                    "velocity_mo_az_step": 10.0
                },
                "local_reflections": {
                    "build_enabled": 0,
                    "last_build_timestamp": 0,
                    "num_cycles": 20
                },
                "isotherm": {
                    "height_temp0": "",
                    "manual_expire_period": 12,
                    "manual_height_temp0": 2400,
                    "manual_temperature": "",
                    "manual_update_time": 0,
                    "season_switch_threshold": 500
                },
                "radarsettings": {
                    "AhDiscretesFirmwareValue": 1403,
                    "beamWidth": 3.25,
                    "trChannel": 44
                },
                "rainfall_computer": {
                    "cell_size": 1000,
                    "max_rainfall_height": 2500,
                    "rainFallParams00": 0.36,
                    "rainFallParams01": 0.0052,
                    "rainFallParams02": 0.013,
                    "rainFallParams10": 0.045,
                    "rainFallParams11": 0.065,
                    "rainFallParams12": 0.0625
                },
                "weather_map": {
                    "contour_line_generalization": 3,
                    "contour_line_expansion": 1,
                    "cell_size": 1000,
                    "max_hor_interpolation_step": 4000,
                    "statistics_wph_off_coord_km_size": 0,
                    "min_always_show_index_wph": 10,
                    "afilter_wph_on": 1,
                    "exclude_contours_after_afilter_wph": 0,
                    "velocityRadial": 1,
                    "maxNumSecVVCycle": 1800,
                    "afilter_wph_treshold1": 400,
                    "afilter_wph_treshold2": 400,
                    "afilter_wph_treshold3": 84,
                    "afilter_wph_treshold4": 84,
                    "afilter_wph_treshold5": 84,
                    "afilter_wph_treshold6": 64,
                    "afilter_wph_treshold7": 84,
                    "afilter_wph_treshold8": 84,
                    "afilter_wph_treshold9": 84,
                    "afilter_wph_treshold10": 4,
                    "afilter_wph_treshold11": 4,
                    "afilter_wph_treshold12": 4,
                    "afilter_wph_treshold13": 4,
                    "afilter_wph_treshold14": 4,
                    "afilter_wph_treshold15": 4,
                    "afilter_wph_treshold16": 4,
                    "afilter_wph_treshold17": 4,
                    "afilter_wph_treshold18": 4,
                    "afilter_wph_treshold19": 4
                }
            },
            "mr":{
                "telescope": {
                    "hostAddress": "127.0.0.1",
                    "portAPI": 8888,
                    "portWebSocket": 8889
                },
                "holoplayer": {
                    "currentTimeOn": false,
                    "loopHoloOn": true,
                    "playspeed": 100,
                    "playPath": "/var/lib/monocle/raw",
                    "start": 110,
                    "stop": 1800,
                    "record": false,
                    "recordPath": "/var/lib/monocle/raw"
                },
                "nams": {
                    "dataRequest": "/script/dati.js",
                    "elevation": 3,
                    "updateRequest": "/cgi-bin/en_cgi_dati.cgi"
                },
                "network": {
                    "hostAddress": "192.168.0.101",
                    "namsAddress": "10.128.128.5",
                    "namsPort": 80,
                    "mtp5Address": "127.0.0.1",
                    "mtp5Port": 5000,
                    "radarAddress": "192.168.0.100",
                    "radarConfRecvPort": 7706,
                    "radarConfSendPort": 7703,
                    "radarConfStatusPort": 7706,
                    "radarConfigurePort": 7703,
                    "radarControlPort": 7701,
                    "radarDataPort": 7700,
                    "radarStatusPort": 7704
                },
                "paths": {
                    "rootPath": "/var/lib/monocle",
                    "jsonRequestsPath": "/var/lib/monocle/control/requests",
                    "jsonResponsesPath": "/var/lib/monocle/control/responses",
                    "localReflectionsPath": "/var/lib/monocle/localreflections",
                    "logPath": "/var/log/monocle",
                    "programsPath": "/var/lib/monocle/programs",
                    "storagePath": "/var/lib/monocle/db",
                    "dbPath": "/var/lib/monocle/mr.db"
                },
                "programs": {
                    "default": "view_dummy_150",
                    "changeModeThroughReadiness": true,
                    "changeModeDelay": 2000,
                    "timeTableEnabled": true,
                    "timeTableId": "view_dummy_150"
                },
                "radar": {
                    "elevation": 25,
                    "hAvADrivesOnIgnoring": false,
                    "configRequestTimeout": 2500
                },
                "remote": {
                    "statusWriteInterval": 5000
                },
                "terrain": {
                    "altitude": 640,
                    "type": 0
                }
            },
            "spg_ini": {
                "bufr": {
                    "enableFileExport": true,
                    "fileExportPath": "/work/monocle-data/fm94bufr"
                },
                "paths": {
                    "logPath": "/var/log/monocle",
                    "parametersPath": "/var/lib/monocle/parameters",
                    "stationsPath": "/var/lib/monocle/parameters/stations",
                    "storagePath": "/work/monocle-data/db"
                }
            }
        }

## Запрос проверки соединения с FTP [/settings/check_ftp_connection]
Запрос на проверку соединения с FTP по указанным реквизитам

### Запрос проверки [POST]

+ Request (application/json)

        {
            "host": "hostname",
            "port": 21,
            "path": "",
            "login": "login",
            "password": "password",
            "active_mode": false
        }

+ Response 200 (application/json)

        {
            "type": "ftp_connection",
            "content" : {
                "result": 0,
                "message": ""
            }
        }

## Получить список файлов содержащихся в каталоге для воспроизведения [/station/{id}/lsholodir]
Запрос списка файлов

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП

+ Response 200 (application/json)
    + Attributes(object)
        - dir (string) - Каталог
        - files: .dat (array[string]) - Список файлов

## Управление вопроизведением голограмм [/station/{id}/holocontrol]
Команды управления записью/воспроизведением голограмм

### Установить новые параметры воспроизведения/записи [POST]

+ Parameters
    + id: `0` (number) - ID СМРЛП

+ Request (application/json)

        {
            "loop_holo_on": true,
            "current_time_on": false,
            "playspeed": 1,
            "start": 100,
            "stop": 200,
            "_comment_command": "Команда воспроизведение(play)/запись(record)/стоп(stop)",
            "_enum_command": "Command: Play = 0/play, Record = 1/record, Stop = 2/stop",
            "command": ""
        }

+ Response 200 (application/json)

        {
            "_enum_status": "Status: Play = 0/play, Record = 1/record, Stop = 2/stop",
            "status": ""
        }


#Group MТП-5

## Выдача списка дат архивных данных температурного профилимера [/station/{id}/mtp/archive]
Выдача архивных дат измерений ТПМ. Список отсортирован по возрастанию

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП

+ Response 200 (application/json; charset=utf-8)

        {
            "dates": [
                "2017-10-20T00:33:44",
                "2017-10-20T00:38:20"
            ]
        }

+ Response 404


## Выдача данных температурного профилемера [/station/{id}/mtp{?date}]
Выдача данных измерений ТПМ и характеристик температурной стратификации для выбранного МП и времени.

### Получить [GET]

+ Parameters
    + id: `0` (number) - ID СМРЛП
    * date (optional) - Дата обзора (ISO формат)

+ Response 200 (application/json; charset=utf-8)
    + Attributes (object)
        - inversion_layer_altitude: 250 (number) - Высота нижней границы слоя инверсии, м
        - inversion_layer_power_height: 260 (number) - Вертикальная мощность слоя инверсии, м
        - inversion_layer_temp_delta: 3.2 (number) Величина слоя инверсии, °С
        - mix_layer_altitude: 800 (number) - Высота слоя перемешивания, м
        - height_temp0: 1800 (number) - Высота изотермы 0°С, м
        - height_temp22: 3000 (number) - Высота изотермы -22°С, м
        - height_tropopause: 11400 (number) - Высота тропопаузы, м
        - data(array) - Данные измерений ТПМ (от 0 до 15000 м)
            - (object)
                - altitude: 15 (number) - Высота
                - temperature: 12.5 (number) - Температура


+ Response 204

+ Response 404

# Group Настройки экспорта

## Настройки экспорта BUFR [/settings/bufr]

Экспорт данных АС СМРЛП в заданные направления по протоколу FTP

### Получить список настроек экспорта BUFR [GET]

+ Response 200 (application/json; charset=utf-8)

        {
            "count": 2,
            "items":
                [
                    {
                        "active": true,
                        "ip": "40.72.241.112",
                        "port": 21,
                        "active_mode": true,
                        "path": "/var/lib/monocle/data/",
                        "login": "login",
                        "password": "password",
                        "stations": [
                            {
                                "id": 1,
                                "title": "Орловка"
                            },
                            {
                                "id": 2,
                                "title": "Чкаловский"
                            },
                            {
                                "id": 3,
                                "title": "Братск"
                            }
                        ]
                    },
                    {
                        "active": false,
                        "ip": "40.72.241.112",
                        "port": 21,
                        "active_mode": false,
                        "path": "/var/lib/monocle/data/",
                        "login": "login",
                        "password": "password",
                        "stations": [
                            {
                                "id": 3,
                                "title": "Братск"
                            }
                        ]
                    }
                ]
        }

### Обновить список настроек экспорта BUFR [PUT]

+ Request (application/json)

        [
            {
                "active": true,
                "ip": "40.72.241.112",
                "port": 21,
                "path": "/var/lib/monocle/data/",
                "login": "login",
                "password": "password",
                "stations": [
                    {
                        "id": 1,
                        "title": "Орловка"
                    },
                    {
                        "id": 2,
                        "title": "Чкаловский"
                    },
                    {
                        "id": 3,
                        "title": "Братск"
                    }
                ]
            },
            {
                "active": false,
                "ip": "40.72.241.112",
                "port": 21,
                "path": "/var/lib/monocle/data/",
                "login": "login",
                "password": "password",
                "stations": [
                    {
                        "id": 3,
                        "title": "Братск"
                    }
                ]
            }
        ]

+ Response 200 (application/json)

        {
            "count": 2,
            "items":
                [
                    {
                        "active": true,
                        "ip": "40.72.241.112",
                        "port": 21,
                        "path": "/var/lib/monocle/data/",
                        "login": "login",
                        "password": "password",
                        "stations": [
                            {
                                "id": 1,
                                "title": "Орловка"
                            },
                            {
                                "id": 2,
                                "title": "Чкаловский"
                            },
                            {
                                "id": 3,
                                "title": "Братск"
                            }
                        ]
                    },
                    {
                        "active": false,
                        "ip": "40.72.241.112",
                        "port": 21,
                        "path": "/var/lib/monocle/data/",
                        "login": "login",
                        "password": "password",
                        "stations": [
                            {
                                "id": 3,
                                "title": "Братск"
                            }
                        ]
                    }
                ]
        }

+ Response 422 (application/json)

        {
            "count": 1,
            "items":
                [
                    {
                        "index": 1,
                        "active": "Невалидное значение",
                        "ip": "Невалидное значение",
                        "port": "Невалидное значение",
                        "path": "Невалидное значение",
                        "stations": "Невалидное значение"
                    }
                ]
        }

## Настройка экспорта НАМС [/settings/nams]
Экспорт данных НАМС с АС СМРПЛ.

### Получить список настроек экспорта НАМС [GET]
+ Response 200 (application/json; charset=utf-8)
    + Attributes(CurrentFtpExportSettings)

### Обновить список настроек экспорта НАМС [PUT]
+ Request (application/json)
    + Attributes(array)
        - (FtpHost)

+ Response 200 (application/json; charset=utf-8)
    + Attributes(CurrentFtpExportSettings)

## Настройка экспорта HDF5 [/settings/hdf5]
Экспорт данных HDF5 c АС СМРПЛ.

### Получить список настроек экспорта HDF5 [GET]
+ Response 200 (application/json; charset=utf-8)
    + Attributes(CurrentFtpExportSettings)

### Обновить список настроек экспорта HDF5 [PUT]
+ Request (application/json)
    + Attributes(array)
        - (FtpHost)

+ Response 200 (application/json; charset=utf-8)
    + Attributes(CurrentFtpExportSettings)

## Настройка экспорта MTP5 [/settings/mtp5]
Экспорт данных MTP5 с АС СМРПЛ

### Получить список настроек экспорта MTP5 [GET]
+ Response 200 (application/json; charset=utf-8)
    + Attributes(CurrentFtpExportSettings)

### Обновить список настроек экспорта MTP5 [PUT]
+ Request (application/json)
    + Attributes(array)
        - (FtpHost)

+ Response 200 (application/json; charset=utf-8)
    + Attributes(CurrentFtpExportSettings)

# Group Служебные

## Версия API [/api/version]
Информация о версии и других свойствах API

### Получить [GET]

+ Response 200 (application/json; charset=utf-8)
    + Attributes(object)
      - version: 1.0.0 (string) - Версия API
      - git_revision: sha1 (string) - Git ревизия backend
      - api_revision: sha1 (string) - Git ревизия API
      - build_date: `2019-11-01T11:13:20+00:00` (string) - Дата сборки
      - supported_methods: /api/version (array[string]) - Методы API


## Версия формата имени файла BUFR [/internal/bufr_versions]
Для некоторых получателей необходимо именовать файлы по разному.
Ограничения: На один хост FTP можно выгрузить только один формат.
Не реализовано (API)ен

### Получить [GET]
+ Response 200 (application/json; charset=utf-8)
    + Attributes(array)
        - (object)
            - node: `monocle-autodor` (string) - Название узла
            - ftp (array):
                - (object)
                    - host: localhost (string) - Имя хоста указанного в настройка выгрузки BUFR
                    - version: aviamettelecom (string) - Название версии формата

## Test [/test]
### Get [GET]

+ Response 200 (application/json)
    + Attributes(Station)

# Data Structures
## Schedule(array)
- (object, fixed-type)
    - id: 0 (number) - Порядковый номер
    - program_id: `123` (string) - Уникальный идентификатор программы
    - date: `00:01:01` (string) - Время запуска программы в формате hh:mm::ss

## FtpHost (object, fixed-type)
Описание FTP-хоста на который происходит выгрузка данных НАМС, BUFR, HDF5 и ТПМ
### Properties
- active: false (boolean) - Признак использования хоста для выгрузки
- ip: example.com (string) - Имя хоста
- port: 21 (number) - Порт
- active_mode: true (boolean) - Активный режим работы FTP
- path: /var/lib/monocle/data/ (string) - Каталог выгрузки данных на FTP
- login: login (string) - Логин
- password: password (string) - Пароль
- stations (array[ShortStationInfo]) - Список станций с которых происходит выгрузка

## ShortStationInfo(object, fixed-type)
Описание станции с которой происходит выгрузка
### Properties
- id: 0 (number) - Идентификатор станции
- title: Орловка (string) - Название станции

## CurrentFtpExportSettings(object, fixed-type)
Текущие настройки экспорта
### Properties
- count: 1(number) - Количество элементов
- items (array[FtpHost]) - Список FTP

## WeightWindowEnum(enum[number])
Типы взвешивания
### Members
- `0` - Без взвешивания
- `1` - Блэккман-Харрис вариант 1
- `2` - Блэккман-Харрис вариант 2

## MeteoClassEnum(enum[number])
Типы метео явлений
### Members
- `1` - Обл. В и Ср яруса
- `2` - Слоистообр. обл.
- `3` - Осадки слабые
- `4` - Осадки умеренные
- `5` - Осадки сильные
- `6` - Кучевая облачность
- `7` - Ливень слабый
- `8` - Ливень умеренный
- `9` - Ливень сильный
- `10` - Гроза - вер. 30-70%
- `11` - Гроза - вер. 71-90%
- `12` - Гроза - вер. >90%
- `13` - Град слабый
- `14` - Град умеренный
- `15` - Град сильный
- `16` - Шквал слабый
- `17` - Шквал умеренный,
- `18` - Шквал сильный
- `19` - Торнадо (смерч)

## AlgorithmParameters(object,fixed-type)
### Properties
+ dpm(object)
    + dataprocessing(object)
        * nominal_cycle_time: 605 (number) - Номинальная длительность обзора, с
        * nominal_rastr_cycle_time: 605 (number) - Номинальная длительность обзора РАСТР, с
        * accumulatorSize: 60 (number) - Размер буфера накопления, пак
        * WeightWindow: `0` (WeightWindowEnum[number]) - Взвешивание
        * falseAlarmProbability: 100 (number) - Вероятность ложной тревоги с МФ
        * falseAlarmMFOffProbability: 100 (number) - Вероятность ложной тревоги без МФ
        * minreflectionrange: 0 (number) - Приземные отражения - Д, м
        * manual_dbz_correction: 0 (number) - Поправка отражаемости, дБZ
        * kaperturef: 1.5 (number) - Коэффициент расширения частотной апертуры МФ, ед.
        * coeffReflMeanSpectreTreshold: 2 (number) - Коэффициент усиления мощности КМО, ед.
        * localReflSpectralSize: 15 (number) - Ширина зоны неподвижных отражений, отсч.
        * coeffIncreaseSingleTargetLF: 1 (number) - Коэффициент увеличения размера одиночной цели, ед.
        * coeffLReflSpectralZeroPwr: 0.9 (number) - Доля неподвижных отражений, ед.
        * oneTgtFiltrOn: false (boolean) - Фильтр одиночных целей в отражаемости
        * linearNoiseFilterEnabled: false (boolean) - Фильтр линейных помех
        * medianFiltrOn: false (boolean) - Медианная фильтрация
        * maxLRPwrValueOn: false (boolean) - Получение максимальной мощности для карты местных отражений
        * spectralLReflFirtrOn: false (boolean) - Спектральный фильтр местных отражений
        * anglev_dbz_correction_enable: false (boolean) - Коррекция Z по приземному заполнению луча
        * velocity_mo_abs_step: 2.5 (number) - Шаг отображения скорости ветра м/с
        * velocity_mo_az_step: 10 (number) - Шаг отображения направления ветра, º
    + local_reflections(object)
        * num_cycles: 4 (number) - Циклы записи мест. отражений
    + rainfall_computer(object)
        * rainFallParams00: 0.36 (number) - Параметры расчета интенсивности осадков из дБZ:Множитель для дождя, ед.
        * rainFallParams01: 0.0052 (number) - Параметры расчета интенсивности осадков из дБZ: Множитель для града, ед.
        * rainFallParams02: 0.013 (number) - Параметры расчета интенсивности осадков из дБZ: Множитель для снега, ед.
        * rainFallParams10: 0.045 (number) - Параметры расчета интенсивности осадков из дБZ: Показатель степени для дождя, ед.
        * rainFallParams11: 0.065 (number) - Параметры расчета интенсивности осадков из дБZ: Показатель степени для града, ед.
        * rainFallParams12: 0.0625 (number) - Параметры расчета интенсивности осадков из дБZ: Показатель степени для снега, ед.
        * max_rainfall_height: 600 (number) - Максимальная высота получения осадков, м
        * cell_size: 1000 (number) - Размер ячейки карты накопленных осадков, м
    + weather_map(object)
        * statistics_wph_off_coord_km_size: 40 (number) - Размер зоны исключения расчета статистики макс МЯ, км
        * afilter_wph_treshold1: 0 (number) - Порог по площади, кв. км: Обл. В и Ср яруса
        * afilter_wph_treshold2: 0 (number) - Порог по площади, кв. км: Слоистообр. обл.
        * afilter_wph_treshold3: 0 (number) - Порог по площади, кв. км: Осадки слабые
        * afilter_wph_treshold4: 0 (number) - Порог по площади, кв. км: Осадки умеренные
        * afilter_wph_treshold5: 0 (number) - Порог по площади, кв. км: Осадки сильные
        * afilter_wph_treshold6: 0 (number) - Порог по площади, кв. км: Кучевая облачность
        * afilter_wph_treshold7: 0 (number) - Порог по площади, кв. км: Ливень слабый
        * afilter_wph_treshold8: 0 (number) - Порог по площади, кв. км: Ливень умеренный
        * afilter_wph_treshold9: 0 (number) - Порог по площади, кв. км: Ливень сильный
        * afilter_wph_treshold10: 0 (number) - Порог по площади, кв. км: Гроза - вер. 30-70%
        * afilter_wph_treshold11: 0 (number) - Порог по площади, кв. км: Гроза - вер. 71-90%
        * afilter_wph_treshold12: 0 (number) - Порог по площади, кв. км: Гроза - вер. >90%
        * afilter_wph_treshold13: 0 (number) - Порог по площади, кв. км: Град слабый
        * afilter_wph_treshold14: 0 (number) - Порог по площади, кв. км: Град умеренный
        * afilter_wph_treshold15: 0 (number) - Порог по площади, кв. км: Град сильный
        * afilter_wph_treshold16: 0 (number) - Порог по площади, кв. км: Шквал слабый
        * afilter_wph_treshold17: 0 (number) - Порог по площади, кв. км: Шквал умеренный
        * afilter_wph_treshold18: 0 (number) - Порог по площади, кв. км: Шквал сильный
        * afilter_wph_treshold19: 0 (number) - Порог по площади, кв. км: Торнадо (смерч)
        * min_always_show_index_wph: 0 (MeteoClassEnum[number]) - Минимально опасное МЯ для постоянного отображения Примечание.  Предложение переименовать: "Мин. МЯ без фильтрации"
        * exclude_contours_after_afilter_wph: false (boolean) - Удалять мелкие контуры после фильтрации
        * afilter_wph_on: false (boolean) - Фильтр статистики МЯ по площади контура
        * cell_size: 1000 (number) - Размер ячейки карты МЯ, м
        * contour_line_generalization: 8 (number) - Степень генерализации контуров, ед.
        * contour_line_expansion: 1 (number) - Величина расширения контуров, ячеек
+ spg(object)
    + vector_velocity_field(object)
        * vector_size: 30 (number) - Размер вектора, ед.
        * vector_thickness: 2 (number) - Толщина вектора, ед.
        * kShortRangeSizeOverlapH: 2 (number) - Параметры расчета векторного поля скоростей: Гор. коэф. перекрытия мал. дальности, ед.
        * kShortRangeSizeOverlapV: 1.5 (number) - Параметры расчета векторного поля скоростей: Верт. коэф. перекрытия мал. дальности, ед.
        * kMediumRangeSizeOverlapH: 3.25 (number) - Параметры расчета векторного поля скоростей: Гор. коэф. перекрытия ср. дальности, ед.
        * kMediumRangeSizeOverlapV: 1.75 (number) - Параметры расчета векторного поля скоростей: Верт. коэф. перекрытия ср. дальности, ед.
        * kLongRangeSizeOverlapH: 3.75 (number) - Параметры расчета векторного поля скоростей: Гор. коэф. перекрытия макс. дальности, ед.
        * kLongRangeSizeOverlapV: 3 (number) - Параметры расчета векторного поля скоростей: Верт. коэф. перекрытия макс. дальности, ед.
        * shortRAzCellThreshold: 25 (number) - Параметры расчета векторного поля скоростей: Азимутальное перекрытия мал. дальности, ед.
        * shortRAzCellFillThreshold: 20 (number) - Параметры расчета векторного поля скоростей: Порог заполнения по азимуту мал. дальности, ед.
        * mediumRAzCellThreshold: 27 (number) - Параметры расчета векторного поля скоростей: Азимутальное перекрытия ср. дальности, ед.
        * mediumRAzCellFillThreshold: 23 (number) - Параметры расчета векторного поля скоростей: Порог заполнения по азимуту ср. дальности, ед.
        * longRAzCellThreshold: 17 (number) - Параметры расчета векторного поля скоростей: Азимутальное перекрытия макс. дальности, ед.
        * longRAzCellFillThreshold: 13 (number) - Параметры расчета векторного поля скоростей: Порог заполнения по азимуту макс. дальности, ед.
        * circular_horizontal_pitch: 8000 (number) - Шаг по горизонтали векторного поля скоростей, м (ОБЗОР)
        * circular_vertical_pitch: 1000 (number) - Шаг по вертикали векторного поля скоростей, м (ОБЗОР)
        * sector_horizontal_pitch: 1000 (number) - Шаг по горизонтали векторного поля скоростей, м (СЕКТОР)
        * sector_vertical_pitch: 500 (number) - Шаг по вертикали векторного поля скоростей, м (СЕКТОР)
    + wind_shear_field(object)
        * circular_max_altitude: 3000 (number) - Максимальная высота поля сдвигов ветра, м (ОБЗОР)
        * circular_max_range: 50000 (number) - Макс дальность поля сдвигов ветра, м (ОБЗОР)
        * sector_max_altitude: 3000 (number) - Максимальная высота поля сдвигов ветра, м (СЕКТОР)
        * sector_max_range: 50000 (number) - Макс дальность поля сдвигов ветра, м (СЕКТОР)
        * horizontal_pitch: 500 (number) - Шаг по горизонтали для поля сдвигов ветра, м
        * vertical_pitch: 500 (number) - Шаг по вертикали для поля сдвигов ветра, м
    + vertically_integrated_liquid(object)
        * stepbuild: 1000 (number) - Размер ячейки построения карты VIL, м
+ render(object)
    + vertical_section(object)
        * vertical_pitch: 0.1 (number) - Шаг по горизонтали для вертикального сечения, км
        * horizontal_pitch: 0.1 (number) - Шаг по вертикали для вертикального сечения и профиля, км

## TitleValuePair(object, fixed-type)
### Properties
- title (string) - Название
- value (string) - Значение

## Program(object, fixed-type)
### Properties
- id (string) - Уникальный идентификатор
- description (string) - Описание
- name (string) - Название
- isDefault: true (boolean) - Признак предустановленной (неудаляемой) программы
- program(object)
    - angles_array: `0.1` (array[number]) - Массив позиций по УМ
    - av_azimuth_change: `0.1` (number) - Azimuth at which the change of angle in the vertical
    - azimuth_scan_speed: `0.1` (number) - Speed scanning in azimuth
    - blank_sectors_array(array) - Массив секторов блокировки
        - (object)
            - start: `0.1` (number) - Начало сектора
            - end: `0.1` (number) - Конец сектора
    - mode: `0`(enum[number]) - Режим работы МРЛС
        + Members
          * `-1` - Несуществующий режим
          * `0` - ГОТОВНОСТЬ
          * `1` - КОНТРОЛЬ
          * `2` - Круговой Обзор ФМ
          * `3` - Растровый Обзов ФМ
          * `4` - Круговой Обзор
          * `5` - Растровый Обзор
    - raster_left_azimuth: `0.1` (number) - left border of a raster review
    - raster_right_azimuth: `0.1` (number) - right border of a raster review
    - scope_range: `0` (number) - Current scope range
    - duration: `00:00:00` (string) - Длительность

## LogLevelEnum(enum[string])
### Members
+ `error` - Ошибка
+ `info` - Информационное сообщение

## LogMessage(object, fixed-type)
### Properties
- date: `2017-05-15T08:30:00` (string) - Дата события (ISO-формат)
- type: `info` (LogLevelEnum) - Уровень сообщения
- station (ShortStationInfo) - Краткая информация о стации на которой произошло событие
- message: `Текст сообщения` (string) - Сообщение

## ColorScale(object, fixed-type)
### Properties
- id: 0 (number) - Идентификатор шкалы
- title: Отражаемость (string) - Название шкалы
- count: 3 (number) - Количество элементов item
- items (array[ColorScaleItem])

## ColorScaleItem(object, fixed-type)
### Properties
- index: 0 (number) - Порядковый номер
- value: 30.5 (number) - Значение
- color: `#010178` (string) - RGB значение цвета

## IsothermSource(object, fixed-type)
### Properties
- source: "auto" (string)
- success: true (boolean)
- value: 3937 (number)

## SeasonEnum(enum[string])
### Members
- `warm`
- `cold`

## Passport(object, fixed-type)
### Properties
- antenna_altitude_msl: 511 (number) - Высота антенны МРЛС над уровнем моря
- cloud_direction: 120 (number) - Направление (азимут, град.) перемещения облачных систем
- cloud_speed: 10.8 (number) - Скорость (м/с) перемещения облачных систем
- data_format: 1 (string) - Код версии сериализованных данных
- date: 20190808T142111Z (string) - Дата завершения формирования первичных РЛП
- hiso0(IsothermSource) - H изотермы 0 °С
- hiso22(IsothermSource) - H изотермы -22 °С
- htropo(IsothermSource) - H тропопаузы
- location: 56.142616, 34.987386 (array[number]) - Географическая координата точки получения обзора
- max_cloud_altitude: 4000 (number) - Вертикальная граница облачности (MAX ВГО)
- max_edr: 0 (number) - Макс. EDR
- max_ground_rfli: 5.323521526695193 (number) - Макс. интенсивность приземных осадков
- min_edr: 0 (number) - Мин. EDR
- min_ground_rfli: 0.1277328201064342 (number) - Мин. интенсивность приземных осадков
- min_refl_altitude: 400 (number) - Нижняя граница радиоэха (MIN ГРЭ)
- primary_valid: true (boolean) - Первичный признак валидности обзора
- program (Program) - Программа выполнения обзора МРЛС
- rfli_height: 2500 (number) - Высота расчёта осадков
- season: `warm` (SeasonEnum) - Период эксплуатации
- secondary_valid: true (boolean) - Окончательный признак валидности обзора
- spg_datetime: `20190808T143015Z` (string) - Дата завершения формирования вторичных РЛП
- station_index: `TEST` (string) - Код станции
- station_name: `station_name` (string) - Имя позиции МРЛК в системе
- station_synoptic_code: `00001` (string) - Синоптический индекс станции
- weather_list: 2, 3, 4, 5, 7 (array[number]) - Отсортированный перечень МЯ
- weather_max: 4 (number) - Максимальное МЯ

## RadarSettings(object, fixed-type)
### Properties
- channel_id: 2 (number) - Номер канала излучения МРЛС
- hold_azimuth: 60.0 (number) - Фиксированный азимут антенны, град.
- hold_tilt: 16.0 (number) - Фиксированный угол места антенны, град.
- azimuth_center: 0.1 (number) - Поправка на север

## ProductRenderer(object, fixed-type)
### Properties
- vector_velocity_field (object)
  - circular_horizontal_pitch: 8000 (number) - Шаг по горизонтали в режиме ОБЗОР
  - circular_vertical_pitch: 1000 (number) - Шаг по вертикали в режиме ОБЗОР
  - sector_horizontal_pitch: 8000 (number) - Шаг по горизонтали в режиме СЕКТОР
  - sector_vertical_pitch: 1000 (number) - Шаг по вертикали в режиме СЕКТОР
  - vector_size: 5 (number) - Размер ячейки вектора поля скоростей
  - vector_thickness: 3 (number) - Толщина линии вектора поля скоростей
- wind_shear_field (object) - Поля сдвигов ветра
  - circular_max_altitude: 100 (number) - Максимальная высота в режиме ОБЗОР
  - circular_max_range: 100 (number) - Максимальная дальность в режиме ОБЗОР
  - sector_max_altitude: 100 (number) - Максимальная высота в режиме СЕКТОР
  - sector_max_range: 100 (number) - Максимальная дальность в режиме СЕКТОР
  - horizontal_pitch: 100 (number) - Шаг по вертикали
  - vertical_pitch: 100 (number) - Шаг по горизонтали
- weather_map (object) - Карты МЯ
  - cell_size: 1000.1 (number) - Размер ячейки МЯ, м
  - contour_line_generalization: 3 (number) - Степень генерализации контуров МЯ
  - contour_line_expansion: 3 (number) - Величины расширения контуров МЯ
- vertical_section (object) - Вертикальное сечение
  - horizontal_pitch: 100 (number)
  - vertical_pitch: 100 (number)
- accumulated_precipitation (object) - Размера ячейки карты накопленных осадков
  - cell_size: 100.1 (number) - Размер
- vertically_integrated_liquid (object) - Размер ячейки построения карты вертикально интегрированной водности
  - cell_size: 100.1 (number) - Размер

## TerrainTypeEnum(enum[number])
Тип местности
### Members
- `0` - Суша
- `1` - Холодное море
- `2` - Тёплое море

## StationBase(object, fixed-type)
Изменяемые параметры станции
### Properties
- index: `0000` (string) - Четёрехсимвольный индекс станции
- title: `Елец`` (string) - Название станции
- baltrad_index: `abcd` (string)
- synopt_index: `1` - (string) - Синоптический индекс
- alarm_id: 0 (number) - Идентификатор оповещения об опасном метео явлении
- latitude: 55.807775 (number) - Широта
- longitude: 37.566814 (number) - Долгота
- terrain_type: 0 (TerrainTypeEnum[number]) - Тип местности
- terrain_altitude: 200 (number) - Высота над уровнем моря
- radar_elevation: 7 (number) - Высота локатора относительно земли
- mtp_elevation: 5 (number) - Высота МТП-5 относительно земли
- precipitation_elevation_calc: 0 (number) - Высота расчёта осадков
- pressure_sensor_elevation: 0 (number)

## Station(StationBase, fixed-type)
### Properties
- id: 0 (number) - Уникальный идентификатор
- path: `monocle-mrlk-bz-ga` (string) - Внутреннее название станции
- hardware_id: `CMRC0001` (string) - Идентификатор оборудования
- radar_present: true (boolean) - Признак установки на посту локатора
- nams_present: true (boolean) - Признак установки на посту НАМС
- mtp_present: true (boolean) - Признак установки на посту МТП-5
- local_reflections_status: `Статус` (string) - Статус карты местных отражений
- equipment_status: false (boolean)
- exchange_status: false (boolean)
- rotation_status: 0.1 (number) - Прогресс текущего обзора
- current_program (object, fixed-type) - Текущая программа
    - id: `dummy` (string) - Уникальный идентификатор программы
    - timetable_enabled: false (boolean) - Признак работы по расписанию
    - title: `TITLE` (string) - Название программы
    - timetable_id: `view` (string)  - Уникальный идентификатор расписания

## WeatherCriteriaBaseItem(object, fixed-type)
### Properties
- index: 0 (number)
- code: `Cl_dBZ23_min` (string)
- title: `Название` (string)
- measurement_unit: `dBZ` (string)
- warm: `10` (number)тр
- cold: `-10` (number)

## WeatherCriteriaItem(WeatherCriteriaBaseItem, fixed-type)
- service_life: `All` (string)

## WeatherCriteria(object, fixed-type)
### Properties
- id: 0 (number)
- type: `Облачность` (string)
- count: 1 (number) - Количество критериев
- items (array[WeatherCriteriaItem])

## MeteoSettings(object, fixed-type)
### Properties
- min_dangerous_meteo: 5 (number) - Индекс минимального опасного МЯ
- max_dangerous_meteo: 19 (number) - Индекс максимального опасного МЯ
- cloud_velocity_radial: true (boolean) - Скорость перемещения облачных масс: true - по радиальной скорости, false - по центру масс МЯ
- meteo_classes (object, fixed-type) - Настройки критериев метеоявлений
    - count: 2 (number)
    - items (array)
        - (object)
            - index: 0 (number)
            - id: 1 (number) - Идентификатор МЯ. 0 означает отсутствие МЯ
            - type: `Название` (string) - Название
            - criteria (object, fixed-type) - Критерий
                - count: 1 (number)
                - items (array[WeatherCriteriaBaseItem])
